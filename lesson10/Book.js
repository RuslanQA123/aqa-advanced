class Book {
    constructor(title, author, year) {
        this._title = title;
        this._author = author;
        this._year = year;
    }

    get title() {
        return this._title;
    }
    get author() {
        return this._author;
    }
    get year() {
        return this._year;
    }

    set title(value) {
        if (typeof value !== "string" || value.trim() === "") {
            throw new Error("–ù–∞–∑–≤–∞ –º–∞—î –±—É—Ç–∏ –Ω–µ–ø–æ—Ä–æ–∂–Ω—ñ–º —Ä—è–¥–∫–æ–º!");
        }
        this._title = value;
    }

    set author(value) {
        if (typeof value !== "string" || value.trim() === "") {
            throw new Error("–ê–≤—Ç–æ—Ä –º–∞—î –±—É—Ç–∏ –Ω–µ–ø–æ—Ä–æ–∂–Ω—ñ–º —Ä—è–¥–∫–æ–º!");
        }
        this._author = value;
    }

    set year(value) {
        if (typeof value !== "number" || value <= 0) {
            throw new Error("–†—ñ–∫ –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞—Ç–Ω–∏–º —á–∏—Å–ª–æ–º!");
        }
        this._year = value;
    }

    printInfo() {
        console.log(`üìò –ö–Ω–∏–≥–∞: "${this.title}", –ê–≤—Ç–æ—Ä: ${this.author}, –†—ñ–∫: ${this.year}`);
    }

    static getOldestBook(books) {
        return books.reduce((oldest, current) => 
            current.year < oldest.year ? current : oldest
        );
    }
}

export default Book;